#!/usr/bin/env sh

{
    . "$(dirname $0)/../../../common"
    deps="$(dirname $0)/../../../deps"

    ports_check() {
        which xcode-select > /dev/null || return 1
        test -d $(xcode-select -p) || return 1
        test -x "$(xcode-select -p)/usr/bin/gcc" || return 1
        PATH="$HOME/.local/bin:$PATH" which port > /dev/null || return 1
        PATH="$HOME/.local/bin:$PATH" port list > /dev/null || return 1
    }

    ports_deps() {
        echo "curl grep head sed tr"
    }

    ports_exec() {
        PATH="$HOME/.local/bin:$PATH" port $@
    }

    ports_install() {
        ports_exec -N install $@
    }

    ports_name() {
        echo "port"
    }

    ports_path() {
        ports_check && \
            PATH="$HOME/.local/bin:$PATH" which port
    }

    ports_selfinstall() {
        ports_selfinstall_developer_command_line_tools
        if [ $? -ne 0 ]; then
            logerr "failed to install Xcode CommandLineTools"
            return 1
        fi

        ports_selfinstall_ports
        if [ $? -ne 0 ]; then
            logerr "failed to install MacPorts"
            return 1
        fi
    }

    ports_selfinstall_developer_command_line_tools() {
        for dep in softwareupdate; do
            if ! which $dep > /dev/null; then
                logerr "$dep not found, cannot be installed automatically"
                return 1
            fi
        done

        logerr installing Xcode CommandLineTools
        # https://apple.stackexchange.com/a/195963
		touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
		PROD=$(softwareupdate -l |
            $($deps exec grep "\*.*Command Line") |
		    head -n 1 | awk -F"*" '{print $2}' |
		    sed -e 's/^ *//' |
		    tr -d '\n')

		softwareupdate -i "$PROD" --verbose;
        return $?
    }

    ports_selfinstall_ports() {
        version=$(ports_version)
        logerr downloading and unpacking MacPorts-$version
        curl --progress-bar -L https://github.com/ports/ports-base/releases/download/v$version/MacPorts-$version.tar.gz | tar -zx -C /tmp/
        if [ $? -ne 0 ]; then
            logerr "failed to download and unpac MacPorts-$version"
            return 1
        fi

        logerr compiling and installing MacPorts-$version
        olddir=$(pwd)
        cd /tmp/MacPorts-$version \
            && ./configure --prefix=$HOME/.local \
                --with-no-root-privileges  \
            && make && make install
        rc=$?
        cd $olddir

        if [ $rc -ne 0 ]; then
            logerr "failed to install MacPorts"
            return 1
        fi

        ports_exec -v selfupdate
        return $?
    }

    ports_version() {
        echo "2.4.2"
    }

    command=$1
    shift 1
    case $command in
        check | deps | install | name | selfinstall)
            ports_$command "$@"
            ;;
        *)
            logexit "unsupported command for ports pkgmgr $command"
            ;;
    esac
}
